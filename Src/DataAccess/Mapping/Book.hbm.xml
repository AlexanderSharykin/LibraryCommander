<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" auto-import="true" default-access="field.camelcase-underscore">
  <class name="DataSchema.Book, DataSchema" table="Books" lazy="false">

    <id name="Id" type="Int32" column="Id" unsaved-value="0"><generator class="native"/></id>
  
    <property name="Title"               type="String"    column="Title"/>
    <property name="Volume"              type="Int32"     column="Volume"/>
    <property name="Year"                type="Int32"     column="Year"/>
    <property name="HasCycleSubcatalog"  type="Boolean"   column="HasCycleSubcatalog"/>    
    <property name="HasAuthorSubcatalog" type="Boolean"   column="HasAuthorSubcatalog"/>    

    <many-to-one name="Category" cascade="none" fetch="join" class="DataSchema.Category"     column="IdCategory"/>
    <many-to-one name="Language" cascade="none" fetch="join" class="DataSchema.FileLanguage" column="IdLanguage"/>
    <many-to-one name="Cycle"    cascade="none" fetch="join" class="DataSchema.Cycle"        column="IdCycle"/>

    <set name="Authors" table="BooksAuthors" lazy="false">
      <key column="IdBook" />
      <many-to-many class="DataSchema.Author" column="IdAuthor" />
    </set>

    <set name="Tags" table="BooksTags" lazy="false">
      <key column="IdBook" />
      <many-to-many class="DataSchema.Tag" column="IdTag" />
    </set>

    <set name="Formats" table="BooksFormats" lazy="false">
      <key column="IdBook" />
      <many-to-many class="DataSchema.FileFormat" column="IdFormat" />
    </set>

  </class>
</hibernate-mapping>
